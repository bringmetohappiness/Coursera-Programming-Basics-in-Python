"""
Гражданская оборона

Штаб гражданской обороны Тридесятой области решил обновить план спасения на
случай ядерной атаки. Известно, что все n селений Тридесятой области находятся
вдоль одной прямой дороги. Вдоль дороги также расположены m бомбоубежищ, в
которых жители селений могут укрыться на случай ядерной атаки.

Чтобы спасение в случае ядерной тревоги проходило как можно эффективнее,
необходимо для каждого селения определить ближайшее к нему бомбоубежище.


Формат ввода:
В первой строке вводится число n - количество селений (1 <= n <= 100000).
Вторая строка содержит n различных целых чисел, i-е из этих чисел задаёт
расстояние от начала дороги до i-го селения. В третьей строке входных данных
задаётся число m - количество бомбоубежищ (1 <= m <= 100000). Четвёртая строка
содержит m различных целых чисел, i-е из этих чисел задаёт расстояние от начала
дороги до i-го бомбоубежища. Все расстояния положительны и не превышают 10⁹.
Селение и убежище могут располагаться в одной точке.


Формат вывода:
Выведите n чисел - для каждого селения выведите номер ближайшего к нему
бомбоубежища. Бомбоубежища пронумерованы от 1 до m в том порядке, в котором они
заданы во входных данных.


Указание:
Создайте список кортежей из пар (позиция селения, его номер в исходном списке),
а также аналогичный список для бомбоубежищ. Отсортируйте эти списки.

Перебирайте селения в порядке возрастания.

Для селения ближайшими могут быть два соседних бомбоубежища, среди них надо
выбрать ближайшее. При переходе к следующему селению не обязательно искать
ближайшее бомбоубежище с самого начала. Его можно искать начиная с позиции,
найденной для предыдущего города. Аналогично, не нужно искать подходящее
бомбоубежище до конца списка бомбоубежищ: достаточно найти самое близкое. Если
Вы неэффективно реализуете эту часть, то решение тесты не пройдёт.

Для хранения ответа используйте список, где индекс будет номером селения, а по
этому индексу будет запоминаться номер бомбоубежища.


Примеры:
Тест 1
input: 4
input: 1 2 6 10
input: 2
input: 7 3
output: 2 2 1 1

Тест 2
input: 1
input: 1
input: 1
input: 2
output: 1

Тест 3
input: 10
input: 79 64 13 8 38 29 58 20 56 17
input: 10
input: 53 19 20 85 82 39 58 46 51 69
output: 5 10 2 2 6 3 7 3 7 2
"""
n = int(input())  # количество селений
# расстояния от начала дороги до селений
villages = list(map(int, input().split()))
m = int(input())  # количество бомбоубежищ
# расстояния от начала дороги до бомбоубежища
bomb_shelters = list(map(int, input().split()))

# кортежи (позиция селения, его номер в исходном списке)
num_villages = [(village, i + 1) for i, village in enumerate(villages)]
# кортежи (позиция бомбоубежища, его номер в исходном списке)
num_bomb_shelters = [
    (bomb_shelter, i+1)
    for i, bomb_shelter in enumerate(bomb_shelters)
]
# сортируем селения и бомбоубежища по позиции
num_villages.sort(key=lambda x: x[0])
num_bomb_shelters.sort(key=lambda x: x[0])

# результирующий список, где индекс - номер селения,
# значение - номер бомбоубежища
result = []
i = 0  # индекс селения
j = 0  # индекс бомбоубежища

while i < n:
    min_dist = abs(num_villages[i][0] - num_bomb_shelters[j][0])
    while j < m - 1:
        dist = abs(num_villages[i][0] - num_bomb_shelters[j + 1][0])
        if dist < min_dist:
            min_dist = dist
            j += 1
        else:
            break
    result.append((num_villages[i][1], num_bomb_shelters[j][1]))
    i += 1

result.sort(key=lambda x: x[0])
print(*[result[i][1] for i in range(n)])
