"""
Вдоль прямой выложены три спички. Необходимо переложить одну из них так, чтобы
при поджигании любой спички сгорали все три. Для того чтобы огонь переходил с
одной спички на другую, необходимо чтобы эти спички соприкасались (хотя бы
концами).

Требуется написать программу, определяющую, какую из трёх спичек необходимо
переместить.


Формат ввода:
Вводятся шесть целых чисел : l₁, r₁, l₂, r₂, l₃, r₃ – координаты первой, второй
и третьей спичек соответственно (0 ≤ lᵢ < rᵢ ≤ 100). Каждая спичка описывается
координатами левого и правого концов по горизонтальной оси OX.


Формат вывода:
Выведите номер искомой спички. Если возможных ответов несколько, то выведите
наименьший из них (наименьший по номеру спички). В случае, когда нет
необходимости перемещать какую-либо спичку, выведите 0. Если же требуемого
результата достигнуть невозможно, то выведите -1.


Примеры:
Тест 1
>>> 0
>>> 2
>>> 4
>>> 5
>>> 3
>>> 6
1

Тест 2
>>> 1
>>> 2
>>> 9
>>> 10
>>> 12
>>> 20
3

Тест 3
>>> 1
>>> 5
>>> 0
>>> 1
>>> 4
>>> 8
0
"""

l1 = int(input())
r1 = int(input())
l2 = int(input())
r2 = int(input())
l3 = int(input())
r3 = int(input())
# случай, когда ничего передвигать не нужно
# 6 вариантов, когда нет зазоров между спичками
# и 3 случая, когда одна спичка перекрывают остальные две
if (l1 <= l2 <= r1 and l2 <= l3 <= r2) or \
        (l1 <= l3 <= r1 and l3 <= l2 <= r3) or \
        (l2 <= l1 <= r2 and l1 <= l3 <= r1) or \
        (l2 <= l3 <= r2 and l3 <= l1 <= r3) or \
        (l3 <= l1 <= r3 and l1 <= l2 <= r1) or \
        (l3 <= l2 <= r3 and l2 <= l1 <= r2) or \
        (l1 <= l2 and l1 <= l3 and r1 >= r2 and r1 >= r3) or \
        (l2 <= l1 and l2 <= l3 and r2 >= r1 and r2 >= r3) or \
        (l3 <= l2 and l3 <= l1 and r3 >= r2 and r3 >= r1):
    print(0)
elif 0 < l2 - r3 <= r1 - l1 or 0 < l3 - r2 <= r1 - l1 or l2 <= l3 <= r2 or \
     l3 <= l2 <= r3:
    print(1)
elif 0 < l1 - r3 <= r2 - l2 or 0 < l3 - r1 <= r2 - l2 or l1 <= l3 <= r1 or \
     l3 <= l1 <= r3:
    print(2)
elif 0 < l1 - r2 <= r3 - l3 or 0 < l2 - r1 <= r3 - l3 or l1 <= l2 <= r1 or \
     l2 <= l1 <= r2:
    print(3)
else:
    print(-1)
